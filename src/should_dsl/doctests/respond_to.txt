>>> from should_dsl import should, should_not

>>> class Foo(object):
...     def bar(self):
...         pass
...     def _internal_bar(self):
...         pass
...     def __name_clashing_bar(self):
...         pass

>>> f = Foo()

>>> f |should| respond_to('bar')

>>> f |should_not| respond_to('bar')
Traceback (most recent call last):
    ...
ShouldNotSatisfied: expected <...Foo ... at ...> not to respond to 'bar'

>>> f |should| respond_to('unexisting_bar')
Traceback (most recent call last):
    ...
ShouldNotSatisfied: expected <...Foo ... at ...> to respond to 'unexisting_bar'

>>> f |should| respond_to('_internal_bar')

>>> f |should| respond_to('_Foo__name_clashing_bar')

